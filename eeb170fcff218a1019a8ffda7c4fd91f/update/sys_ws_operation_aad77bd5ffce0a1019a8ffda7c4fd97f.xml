<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ws_operation">
    <sys_ws_operation action="INSERT_OR_UPDATE">
        <active>true</active>
        <consumes>application/json,application/xml,text/xml</consumes>
        <consumes_customized>false</consumes_customized>
        <default_operation_uri/>
        <enforce_acl>cf9d01d3e73003009d6247e603f6a990</enforce_acl>
        <http_method>POST</http_method>
        <name>PolicyStatus</name>
        <operation_script><![CDATA[(function process(/*RESTAPIRequest*/ request, /*RESTAPIResponse*/ response) {

	
var header1=request.headers['x-frame-options']||"";
var header2=request.headers['content-security-policy']||"";


// check for headers security purpose
if(header1=="" ||  new x_rptp_smartinte_0.checkForHeaders().checkHeaders("1",header1)+""=="0"){
	response.setContentType("application/json");
			response.setStatus(400);
            var inValidUser={
				code:400,
				message:"Missing or invalid X-Frame-Options in header"
			}
            var writer = response.getStreamWriter();
            writer.writeString(JSON.stringify(inValidUser));
			return;
}
if(header2=="" || new x_rptp_smartinte_0.checkForHeaders().checkHeaders("2",header2)+"" =="0"){
	response.setContentType("application/json");
			response.setStatus(400);
            var inValidUser={
				code:400,
				message:"Missing or invalid Content-Security-Policy in header"
			}
            var writer = response.getStreamWriter();
            writer.writeString(JSON.stringify(inValidUser));
			return;
}


	var insurer=request.headers.insurer;
    var req=request.body.data;
	try {
		var inputs = {};
		inputs['insurer'] = insurer; // String 
		inputs['requestbody'] =req ; // JSON 


		// Start Asynchronously: Uncomment to run in background. Code snippet will not have access to outputs.
		// sn_fd.FlowAPI.getRunner().subflow('x_rptp_smartinte_0.fetch_policy_data').inBackground().withInputs(inputs).run();
				
		// Execute Synchronously: Run in foreground. Code snippet has access to outputs.
		var result = sn_fd.FlowAPI.getRunner().subflow('x_rptp_smartinte_0.fetch_policy_data').inForeground().withInputs(inputs).run();
		

		var outputs = result.getOutputs();

		// Get Outputs:
		// Note: outputs can only be retrieved when executing synchronously.
		var requestdetails = outputs['requestdetails']; // String
		
		var res = outputs['response']; // String
		
            res=res.responses;
			response.setContentType('application/json');
            var writer = response.getStreamWriter();
            writer.writeString(JSON.stringify(res));
 
		
	} catch (ex) {
		var res = outputs['response'];

		if(res && res.code){
			response.setContentType('application/json');
			 response.setBody(res);
		}
		else{
		var message = ex.getMessage();
		
		response.setContentType('application/json');
			 response.setBody({
				status:400,
				message:message
			 });
		}
	}
    // implement resource here

})(request, response);]]></operation_script>
        <operation_uri>/api</operation_uri>
        <produces>application/json,application/xml,text/xml</produces>
        <produces_customized>false</produces_customized>
        <relative_path>/</relative_path>
        <request_example/>
        <requires_acl_authorization>true</requires_acl_authorization>
        <requires_authentication>true</requires_authentication>
        <requires_snc_internal_role>true</requires_snc_internal_role>
        <short_description/>
        <sys_class_name>sys_ws_operation</sys_class_name>
        <sys_created_by>akshay</sys_created_by>
        <sys_created_on>2024-05-08 05:48:46</sys_created_on>
        <sys_id>aad77bd5ffce0a1019a8ffda7c4fd97f</sys_id>
        <sys_mod_count>19</sys_mod_count>
        <sys_name>PolicyStatus</sys_name>
        <sys_package display_value="SmartIntegration" source="x_rptp_smartinte_0">eeb170fcff218a1019a8ffda7c4fd91f</sys_package>
        <sys_policy/>
        <sys_scope display_value="SmartIntegration">eeb170fcff218a1019a8ffda7c4fd91f</sys_scope>
        <sys_update_name>sys_ws_operation_aad77bd5ffce0a1019a8ffda7c4fd97f</sys_update_name>
        <sys_updated_by>harshitha</sys_updated_by>
        <sys_updated_on>2024-12-19 06:07:41</sys_updated_on>
        <web_service_definition display_value="">95c777d5ffce0a1019a8ffda7c4fd99e</web_service_definition>
        <web_service_version display_value="">7261cce7ff1c16d019a8ffda7c4fd9c8</web_service_version>
    </sys_ws_operation>
    <sys_es_latest_script action="INSERT_OR_UPDATE">
        <id>aad77bd5ffce0a1019a8ffda7c4fd97f</id>
        <sys_created_by>harshitha</sys_created_by>
        <sys_created_on>2024-12-16 10:44:46</sys_created_on>
        <sys_id>de9c80812b229210c692feb2f291bf6e</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>harshitha</sys_updated_by>
        <sys_updated_on>2024-12-16 10:44:46</sys_updated_on>
        <table>sys_ws_operation</table>
        <use_es_latest>true</use_es_latest>
    </sys_es_latest_script>
</record_update>
