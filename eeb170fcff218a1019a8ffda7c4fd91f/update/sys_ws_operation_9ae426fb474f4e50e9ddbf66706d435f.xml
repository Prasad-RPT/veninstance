<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ws_operation">
    <sys_ws_operation action="INSERT_OR_UPDATE">
        <active>true</active>
        <consumes>application/json,application/xml,text/xml</consumes>
        <consumes_customized>false</consumes_customized>
        <default_operation_uri>/api/x_rptp_smartinte_0/asynccall</default_operation_uri>
        <enforce_acl/>
        <http_method>GET</http_method>
        <name>quote</name>
        <operation_script><![CDATA[(function process(/*RESTAPIRequest*/ request, /*RESTAPIResponse*/ response) {

try {
		var inputs = {};
		inputs['vara'] = ""; // String 

		// Start Asynchronously: Uncomment to run in background. Code snippet will not have access to outputs.
		// sn_fd.FlowAPI.getRunner().subflow('x_rptp_smartinte_0.getquote').inBackground().withInputs(inputs).run();
				
		// Execute Synchronously: Run in foreground. Code snippet has access to outputs.
		var result = sn_fd.FlowAPI.getRunner().subflow('x_rptp_smartinte_0.getquote').inForeground().withInputs(inputs).run();
		var outputs = result.getOutputs();

		// Get Outputs:
		// Note: outputs can only be retrieved when executing synchronously.
		var output = outputs['output']; // String
        response.setContentType('application/json');
		response.setBody({res:output});
		
	} catch (ex) {
		var message = ex.getMessage();
	//	gs.error(message);
		var output = outputs['output']; // String
        response.setContentType('application/json');
		response.setBody({res:message});
	}
	

// var insurer = request.headers.insurer || "all";
// var req = request.body.data;

    
// 	try {
// 			inputs = {};
// 		inputs['requestbody'] = req; // JSON 
// 		inputs['producttype'] = req.categoryCode;

// 		// Start Asynchronously: Uncomment to run in background. Code snippet will not have access to outputs.
// 		// sn_fd.FlowAPI.getRunner().subflow('x_rptp_smartinte_0.bulk_qoute').inBackground().withInputs(inputs).run();

// 		// Execute Synchronously: Run in foreground. Code snippet has access to outputs.
// 				// Execute Synchronously: Run in foreground. Code snippet has access to outputs.
// 		var result = sn_fd.FlowAPI.getRunner().subflow('x_rptp_smartinte_0.async_call').inForeground().withInputs(inputs).timeout(50000).run();
// 		var outputs = result.getOutputs();

// 		// Get Outputs:
// 		// Note: outputs can only be retrieved when executing synchronously.
// 		//   var requestdetails = outputs['requestdetails']; // String
// 			res = outputs['response']; // String
// 		response.setContentType('application/json');
// 		response.setBody(
// 			{
// 				"message":"Bulk Call Successful",
// 				"ID":res
// 			}
// 		);

// 	} catch (ex) {
// 			message = ex.getMessage();
// 		gs.error(message);
// 		response.setContentType('application/json');
// 		response.setBody((message));
// 	}

})(request, response);]]></operation_script>
        <operation_uri>/api/x_rptp_smartinte_0/v1/asynccall</operation_uri>
        <produces>application/json,application/xml,text/xml</produces>
        <produces_customized>false</produces_customized>
        <relative_path>/</relative_path>
        <request_example/>
        <requires_acl_authorization>false</requires_acl_authorization>
        <requires_authentication>false</requires_authentication>
        <requires_snc_internal_role>false</requires_snc_internal_role>
        <short_description/>
        <sys_class_name>sys_ws_operation</sys_class_name>
        <sys_created_by>akshay</sys_created_by>
        <sys_created_on>2024-07-04 11:20:15</sys_created_on>
        <sys_id>9ae426fb474f4e50e9ddbf66706d435f</sys_id>
        <sys_mod_count>10</sys_mod_count>
        <sys_name>quote</sys_name>
        <sys_package display_value="SmartIntegration" source="x_rptp_smartinte_0">eeb170fcff218a1019a8ffda7c4fd91f</sys_package>
        <sys_policy/>
        <sys_scope display_value="SmartIntegration">eeb170fcff218a1019a8ffda7c4fd91f</sys_scope>
        <sys_update_name>sys_ws_operation_9ae426fb474f4e50e9ddbf66706d435f</sys_update_name>
        <sys_updated_by>akshay</sys_updated_by>
        <sys_updated_on>2024-11-14 10:47:10</sys_updated_on>
        <web_service_definition display_value="AsyncCall">22d4a277474f4e50e9ddbf66706d438a</web_service_definition>
        <web_service_version display_value="v1">eaa2c42fff1c16d019a8ffda7c4fd960</web_service_version>
    </sys_ws_operation>
    <sys_es_latest_script action="INSERT_OR_UPDATE">
        <id>9ae426fb474f4e50e9ddbf66706d435f</id>
        <sys_created_by>akshay</sys_created_by>
        <sys_created_on>2024-11-14 07:14:50</sys_created_on>
        <sys_id>c7a9222247711250e9ddbf66706d433f</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>akshay</sys_updated_by>
        <sys_updated_on>2024-11-14 07:14:50</sys_updated_on>
        <table>sys_ws_operation</table>
        <use_es_latest>true</use_es_latest>
    </sys_es_latest_script>
</record_update>
