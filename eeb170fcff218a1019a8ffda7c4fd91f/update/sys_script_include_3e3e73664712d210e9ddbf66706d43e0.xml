<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_rptp_smartinte_0.PopulateAPITable</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description/>
        <mobile_callable>false</mobile_callable>
        <name>PopulateAPITable</name>
        <sandbox_callable>false</sandbox_callable>
        <script><![CDATA[var PopulateAPITable = Class.create();
PopulateAPITable.prototype = {
    initialize: function() {
        var sourceTable = 'sys_flow_context'; 
        var destinationTable = 'x_rptp_smartinte_0_api_performance';
		var insurerTable = 'sys_outbound_http_log';

        var totalRuntime = 0;
        var recordCount = 0;

		var insurerTotal = 0;
		var insurerCount = 0;

		var hdfcTotal = 0;
		var hdfcCount = 0;

		var iciciTotal = 0;
		var iciciCount = 0;

		//Request time
        var grSource = new GlideRecord(sourceTable);
		var field = "Nearest Match PT&PPT";
		grSource.addQuery('name', field);
		grSource.query();

		//BALIC Insurer time filter
		var gri = new GlideRecord(insurerTable);
		var url = "balicsit.bajajallianz.com";
		gri.addQuery('hostname', url);
		gri.query();

		//HDFC Insurer time filter
		var grhdfc = new GlideRecord(insurerTable);
		var urlhdfc = "integrate-u.hdfclife.com";
		grhdfc.addQuery('hostname', urlhdfc);
		grhdfc.query();

		//ICICI Insurer time filter
		var gricici = new GlideRecord(insurerTable);
		var urlicici = "api-dex.iciciprulife.com";
		gricici.addQuery('hostname', urlicici);
		gricici.query();
       
		//Filter for created date and time
		var gdt = new GlideDateTime(); 
		var startOfDay = new GlideDateTime(); 
		var dateOnly = gdt.getDate().getDisplayValue(); 
		startOfDay.setDisplayValue(dateOnly + ' 00:00:00');
		var endOfDay = new GlideDateTime(); 
		endOfDay.setDisplayValue(dateOnly + ' 23:59:59');
		gs.info('End of Day: ' + endOfDay.getDisplayValue());
		
		//Request time
		grSource.addQuery('sys_created_on', '>=', startOfDay); 
        grSource.addQuery('sys_created_on', '<=', endOfDay);   
        grSource.query();

		//Insurer time
		gri.addQuery('sys_created_on', '>=', startOfDay); 
        gri.addQuery('sys_created_on', '<=', endOfDay);   
        gri.query();
		grhdfc.addQuery('sys_created_on', '>=', startOfDay); 
        grhdfc.addQuery('sys_created_on', '<=', endOfDay);   
        grhdfc.query();
		gricici.addQuery('sys_created_on', '>=', startOfDay); 
        gricici.addQuery('sys_created_on', '<=', endOfDay);   
        gricici.query();

        while (grSource.next()) {
            totalRuntime += parseFloat(grSource.run_time || 0);
            recordCount++;
        }

        gs.info(totalRuntime);
		gs.info(recordCount);
        var averageRuntime = (recordCount > 0) ? (totalRuntime / recordCount) : 0;

		//BALIC
		while (gri.next()) {
            insurerTotal += parseFloat(gri.response_time || 0);
            insurerCount++;
        }
		gs.info('Insurer Total: '+ insurerTotal);
		gs.info('Record Insurer: '+ insurerCount);
        var insurerAverage = (insurerCount > 0) ? (insurerTotal / insurerCount) : 0;

		//HDFC
		while (grhdfc.next()) {
            hdfcTotal += parseFloat(grhdfc.response_time || 0);
            hdfcCount++;
        }
		gs.info('Insurer Total: '+ hdfcTotal);
		gs.info('Record Insurer: '+ hdfcCount);
        var hdfcAverage = (hdfcCount > 0) ? (hdfcTotal / hdfcCount) : 0;
		gs.info('HDFC Total: '+ hdfcAverage);

		//ICICI
		while (gricici.next()) {
            iciciTotal += parseFloat(gricici.response_time || 0);
            iciciCount++;
        }
		gs.info('Insurer Total: '+ iciciTotal);
		gs.info('Record Insurer: '+ iciciCount);
        var iciciAverage = (iciciCount > 0) ? (iciciTotal / iciciCount) : 0;
		gs.info('ICICI Total: '+ iciciAverage);


        var grDest = new GlideRecord(destinationTable);
        grDest.initialize();
        grDest.nearest_match_pt_ppt = 0; 
		grDest.request_time = averageRuntime; 
		grDest.response_time = 0;
		grDest.insurer_time = insurerAverage;
		grDest.insurer_time_hdfc= hdfcAverage;
		grDest.insurer_time_icici= iciciAverage;
        grDest.balic_quote = 0; 
        grDest.get_quote_common_validation = 0;
        grDest.insurer_is_balic = 0;
        grDest.mapping_values_according_to_insurer = 0;
        grDest.flow_execution = 0;
        grDest.insert();

        gs.info('Average Runtime: ' + averageRuntime);
		gs.info('Average Insurer Runtime: ' + insurerAverage);

    },

    type: 'PopulateAPITable'
};
]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>prasad.n</sys_created_by>
        <sys_created_on>2024-12-09 10:10:03</sys_created_on>
        <sys_id>3e3e73664712d210e9ddbf66706d43e0</sys_id>
        <sys_mod_count>23</sys_mod_count>
        <sys_name>PopulateAPITable</sys_name>
        <sys_package display_value="SmartIntegration" source="x_rptp_smartinte_0">eeb170fcff218a1019a8ffda7c4fd91f</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="SmartIntegration">eeb170fcff218a1019a8ffda7c4fd91f</sys_scope>
        <sys_update_name>sys_script_include_3e3e73664712d210e9ddbf66706d43e0</sys_update_name>
        <sys_updated_by>prasad.n</sys_updated_by>
        <sys_updated_on>2024-12-20 10:43:08</sys_updated_on>
    </sys_script_include>
    <sys_es_latest_script action="INSERT_OR_UPDATE">
        <id>3e3e73664712d210e9ddbf66706d43e0</id>
        <sys_created_by>prasad.n</sys_created_by>
        <sys_created_on>2024-12-09 10:10:03</sys_created_on>
        <sys_id>5981ccfa4712d210e9ddbf66706d4340</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>prasad.n</sys_updated_by>
        <sys_updated_on>2024-12-09 10:10:03</sys_updated_on>
        <table>sys_script_include</table>
        <use_es_latest>true</use_es_latest>
    </sys_es_latest_script>
</record_update>
